// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "edensocket.h"

/////////////////////////////////////////////////////////////////////////////
// CEdenSocket

IMPLEMENT_DYNCREATE(CEdenSocket, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CEdenSocket properties

BOOL CEdenSocket::GetAddSH()
{
	BOOL result;
	GetProperty(0x2, VT_BOOL, (void*)&result);
	return result;
}

void CEdenSocket::SetAddSH(BOOL propVal)
{
	SetProperty(0x2, VT_BOOL, propVal);
}

BOOL CEdenSocket::GetStripCCSDS()
{
	BOOL result;
	GetProperty(0x1, VT_BOOL, (void*)&result);
	return result;
}

void CEdenSocket::SetStripCCSDS(BOOL propVal)
{
	SetProperty(0x1, VT_BOOL, propVal);
}

BOOL CEdenSocket::GetAddCCSDS()
{
	BOOL result;
	GetProperty(0x3, VT_BOOL, (void*)&result);
	return result;
}

void CEdenSocket::SetAddCCSDS(BOOL propVal)
{
	SetProperty(0x3, VT_BOOL, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CEdenSocket operations

BOOL CEdenSocket::Create(long nPort)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4;
	InvokeHelper(0x4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nPort);
	return result;
}

BOOL CEdenSocket::SendCmdAnsw(long nStatus, LPCTSTR szCmd)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_BSTR;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStatus, szCmd);
	return result;
}

BOOL CEdenSocket::SendTmScoe(long nApid, const VARIANT& pData, long nLen)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_VARIANT VTS_I4;
	InvokeHelper(0x6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nApid, &pData, nLen);
	return result;
}

BOOL CEdenSocket::SendTmSpace(long nApid, const VARIANT& pData, long nLen)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_VARIANT VTS_I4;
	InvokeHelper(0x7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nApid, &pData, nLen);
	return result;
}

BOOL CEdenSocket::SendTcA(long nStatus, long nTCID)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4;
	InvokeHelper(0x8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStatus, nTCID);
	return result;
}

BOOL CEdenSocket::Connect(LPCTSTR szHostAddress, long nPort)
{
	BOOL result;
	static BYTE parms[] =
		VTS_BSTR VTS_I4;
	InvokeHelper(0x9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		szHostAddress, nPort);
	return result;
}

BOOL CEdenSocket::Disconnect()
{
	BOOL result;
	InvokeHelper(0xa, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
	return result;
}

BOOL CEdenSocket::SendTcE(long nStatus, long nTCID, const VARIANT& pData, long nLen)
{
	BOOL result;
	static BYTE parms[] =
		VTS_I4 VTS_I4 VTS_VARIANT VTS_I4;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms,
		nStatus, nTCID, &pData, nLen);
	return result;
}

void CEdenSocket::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}
